name: Reusable - Build and Publish Docker Image

on:
  workflow_call:
    inputs:
      semVer:
        required: true
        type: string
      assemblySemVer:
        required: true
        type: string
      assemblySemFileVer:
        required: true
        type: string
      informationalVersion:
        required: true
        type: string

jobs:
  build-and-push:
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    permissions:
      contents: read
      packages: write
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      digest: ${{ steps.build-and-push.outputs.digest }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Log in to GHCR
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef #v3.6.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 #v3.11.1
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=${{ inputs.semVer }}
            type=raw,value=latest,enable=${{ github.event_name != 'pull_request' }}
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 #v6.18.0
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            VERSION=${{ inputs.semVer }}
            ASSEMBLY_VERSION=${{ inputs.assemblySemVer }}
            FILE_VERSION=${{ inputs.assemblySemFileVer }}
            INFORMATIONAL_VERSION=${{ inputs.informationalVersion }}
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  sign-image:
    needs: [build-and-push]
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Log in to GHCR
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef #v3.6.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Install cosign
        uses: sigstore/cosign-installer@7e8b541eb2e61bf99390e1afd4be13a184e9ebc5 # v3.10.1
        with:
          cosign-release: 'v2.2.4'
      - name: Sign the published Docker image
        env:
          TAGS: ${{ needs.build-and-push.outputs.tags }}
          DIGEST: ${{ needs.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

  attest-image:
    needs: [build-and-push]
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Log in to GHCR
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef #v3.6.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@977bb373ede98d70efdf65b84cb5f73e068dcc2a # v3
        with:
          subject-name: ghcr.io/${{ github.repository }}
          subject-digest: ${{ needs.build-and-push.outputs.digest }}
          push-to-registry: true
