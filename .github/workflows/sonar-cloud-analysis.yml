name: Reusable - SonarCloud Analysis

on:
  workflow_call:
    secrets:
      SONAR_TOKEN:
        required: true

jobs:
  sonar:
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          fetch-tags: true
          ref: ${{ github.sha }}
      - name: Setup .NET SDK (10.0.100-rc.1.25451.107)
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: "10.0.100-rc.1.25451.107"
          cache: true
          cache-dependency-path: "**/packages.lock.json"
      - name: Download coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage
          path: artifacts/coverage
      - name: Download test results artifact
        uses: actions/download-artifact@v4
        with:
          name: test-results
          path: artifacts/test-results
      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Install SonarQube Cloud scanner
        run: |
          dotnet tool update dotnet-sonarscanner --tool-path "${{ runner.temp }}/scanner"
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          "${{ runner.temp }}/scanner/dotnet-sonarscanner" begin /k:"DavidCapcuch_DotNetAtlas" /o:"davidcapcuch" /d:sonar.token="$SONAR_TOKEN" /d:sonar.sources="src" /d:sonar.tests="test" /d:sonar.cs.vstest.reportsPaths="artifacts/test-results/**/*.trx" /d:sonar.cs.cobertura.reportsPaths="artifacts/coverage/Cobertura.xml"
          dotnet build -c Release -p:OpenApiGenerateDocuments=false
          "${{ runner.temp }}/scanner/dotnet-sonarscanner" end /d:sonar.token="$SONAR_TOKEN"
