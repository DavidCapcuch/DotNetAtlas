{
  "x-generator": "NSwag v14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "DotNetAtlas",
    "description": "DotNet Atlas - Made with ❤️, Powered by ☕",
    "contact": {
      "name": "David Capcuch",
      "url": "",
      "email": "d.capcuch@gmail.com"
    },
    "version": "v1"
  },
  "paths": {
    "/api/v1/weather/feedback/{id}": {
      "put": {
        "tags": [
          "Weather"
        ],
        "summary": "Change weather feedback. Only user who created the feedback can change it. (Auth non-anonymous)",
        "operationId": "DotNetAtlasApiEndpointsWeatherChangeFeedbackEndpoint",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "example": "0198b2a9-cb8c-744b-8cdd-0b64727cf2fc"
          }
        ],
        "requestBody": {
          "x-name": "ChangeFeedbackCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeFeedbackCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      },
      "get": {
        "tags": [
          "Weather"
        ],
        "summary": "Returns weather feedback by ID. (Auth non-anonymous)",
        "operationId": "DotNetAtlasApiEndpointsWeatherGetFeedbackByIdEndpoint",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of requested feedback.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "example": "0198b2a9-cb8c-744b-8cdd-0b64727cf2fc"
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFeedbackByIdResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/api/v1/weather/forecast": {
      "get": {
        "tags": [
          "Weather"
        ],
        "summary": "Returns weather forecast.",
        "description": "Provides x days weather forecast for the specified city.",
        "operationId": "DotNetAtlasApiEndpointsWeatherGetForecastEndpoint",
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "required": true,
            "description": "Number of days of forecast (1-14).",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 5
          },
          {
            "name": "city",
            "in": "query",
            "required": true,
            "description": "City name to fetch forecast for.",
            "schema": {
              "type": "string"
            },
            "example": "Prague"
          },
          {
            "name": "countryCode",
            "in": "query",
            "required": true,
            "description": "ISO 3166-1 alpha-2 country code to disambiguate city (e.g., CZ).",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CountryCode"
                }
              ]
            },
            "example": 0
          },
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            },
            "example": null
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetForecastResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/weather/feedback": {
      "post": {
        "tags": [
          "Weather"
        ],
        "summary": "Send weather forecast feedback. (Auth non-anonymous)",
        "operationId": "DotNetAtlasApiEndpointsWeatherSendFeedbackEndpoint",
        "requestBody": {
          "x-name": "SendFeedbackCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendFeedbackCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "409": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ChangeFeedbackCommand": {
        "type": "object",
        "example": {
          "feedback": "Nevermind. Promised sun, delivered ocean. Boss music started and my picnic learned to swim",
          "rating": 1
        },
        "additionalProperties": false,
        "properties": {
          "feedback": {
            "type": "string",
            "description": "Feedback message about the weather forecast.",
            "example": "Nevermind. Promised sun, delivered ocean. Boss music started and my picnic learned to swim"
          },
          "rating": {
            "type": "integer",
            "format": "byte",
            "example": 1
          }
        }
      },
      "GetFeedbackByIdResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the feedback.",
            "format": "guid"
          },
          "feedback": {
            "type": "string",
            "description": "The weather feedback content."
          },
          "rating": {
            "type": "integer",
            "format": "int32"
          },
          "createdByUser": {
            "type": "string",
            "description": "Who created the feedback.",
            "format": "guid"
          }
        }
      },
      "GetForecastResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "forecasts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ForecastDto"
            }
          }
        }
      },
      "ForecastDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "maxTemperatureC": {
            "type": "number",
            "format": "double"
          },
          "minTemperatureC": {
            "type": "number",
            "format": "double"
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SendFeedbackCommand": {
        "type": "object",
        "example": {
          "feedback": "Your radar is my spirit animal. Dodged the storm like Neo",
          "rating": 5
        },
        "additionalProperties": false,
        "properties": {
          "feedback": {
            "type": "string",
            "description": "Feedback message about the weather forecast.",
            "example": "Your radar is my spirit animal. Dodged the storm like Neo"
          },
          "rating": {
            "type": "integer",
            "format": "byte",
            "example": 5
          }
        }
      },
      "CountryCode": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Cz",
          "Us",
          "Gb",
          "Ad",
          "Ae",
          "Af",
          "Ag",
          "Ai",
          "Al",
          "Am",
          "Ao",
          "Aq",
          "Ar",
          "As",
          "At",
          "Au",
          "Aw",
          "Ax",
          "Az",
          "Ba",
          "Bb",
          "Bd",
          "Be",
          "Bf",
          "Bg",
          "Bh",
          "Bi",
          "Bj",
          "Bl",
          "Bm",
          "Bn",
          "Bo",
          "Bq",
          "Br",
          "Bs",
          "Bt",
          "Bv",
          "Bw",
          "By",
          "Bz",
          "Ca",
          "Cc",
          "Cd",
          "Cf",
          "Cg",
          "Ch",
          "Ci",
          "Ck",
          "Cl",
          "Cm",
          "Cn",
          "Co",
          "Cr",
          "Cu",
          "Cv",
          "Cw",
          "Cx",
          "Cy",
          "De",
          "Dj",
          "Dk",
          "Dm",
          "Do",
          "Dz",
          "Ec",
          "Ee",
          "Eg",
          "Eh",
          "Er",
          "Es",
          "Et",
          "Fi",
          "Fj",
          "Fk",
          "Fm",
          "Fo",
          "Fr",
          "Ga",
          "Gd",
          "Ge",
          "Gf",
          "Gg",
          "Gh",
          "Gi",
          "Gl",
          "Gm",
          "Gn",
          "Gp",
          "Gq",
          "Gr",
          "Gs",
          "Gt",
          "Gu",
          "Gw",
          "Gy",
          "Hk",
          "Hm",
          "Hn",
          "Hr",
          "Ht",
          "Hu",
          "Id",
          "Ie",
          "Il",
          "Im",
          "In",
          "Io",
          "Iq",
          "Ir",
          "Is",
          "It",
          "Je",
          "Jm",
          "Jo",
          "Jp",
          "Ke",
          "Kg",
          "Kh",
          "Ki",
          "Km",
          "Kn",
          "Kp",
          "Kr",
          "Kw",
          "Ky",
          "Kz",
          "La",
          "Lb",
          "Lc",
          "Li",
          "Lk",
          "Lr",
          "Ls",
          "Lt",
          "Lu",
          "Lv",
          "Ly",
          "Ma",
          "Mc",
          "Md",
          "Me",
          "Mf",
          "Mg",
          "Mh",
          "Mk",
          "Ml",
          "Mm",
          "Mn",
          "Mo",
          "Mp",
          "Mq",
          "Mr",
          "Ms",
          "Mt",
          "Mu",
          "Mv",
          "Mw",
          "Mx",
          "My",
          "Mz",
          "Na",
          "Nc",
          "Ne",
          "Nf",
          "Ng",
          "Ni",
          "Nl",
          "No",
          "Np",
          "Nr",
          "Nu",
          "Nz",
          "Om",
          "Pa",
          "Pe",
          "Pf",
          "Pg",
          "Ph",
          "Pk",
          "Pl",
          "Pm",
          "Pn",
          "Pr",
          "Ps",
          "Pt",
          "Pw",
          "Py",
          "Qa",
          "Re",
          "Ro",
          "Rs",
          "Ru",
          "Rw",
          "Sa",
          "Sb",
          "Sc",
          "Sd",
          "Se",
          "Sg",
          "Sh",
          "Si",
          "Sj",
          "Sk",
          "Sl",
          "Sm",
          "Sn",
          "So",
          "Sr",
          "Ss",
          "St",
          "Sv",
          "Sx",
          "Sy",
          "Sz",
          "Tc",
          "Td",
          "Tf",
          "Tg",
          "Th",
          "Tj",
          "Tk",
          "Tl",
          "Tm",
          "Tn",
          "To",
          "Tr",
          "Tt",
          "Tv",
          "Tw",
          "Tz",
          "Ua",
          "Ug",
          "Um",
          "Uy",
          "Uz",
          "Va",
          "Vc",
          "Ve",
          "Vg",
          "Vi",
          "Vn",
          "Vu",
          "Wf",
          "Ws",
          "Ye",
          "Yt",
          "Za",
          "Zm",
          "Zw"
        ],
        "enum": [
          "Cz",
          "Us",
          "Gb",
          "Ad",
          "Ae",
          "Af",
          "Ag",
          "Ai",
          "Al",
          "Am",
          "Ao",
          "Aq",
          "Ar",
          "As",
          "At",
          "Au",
          "Aw",
          "Ax",
          "Az",
          "Ba",
          "Bb",
          "Bd",
          "Be",
          "Bf",
          "Bg",
          "Bh",
          "Bi",
          "Bj",
          "Bl",
          "Bm",
          "Bn",
          "Bo",
          "Bq",
          "Br",
          "Bs",
          "Bt",
          "Bv",
          "Bw",
          "By",
          "Bz",
          "Ca",
          "Cc",
          "Cd",
          "Cf",
          "Cg",
          "Ch",
          "Ci",
          "Ck",
          "Cl",
          "Cm",
          "Cn",
          "Co",
          "Cr",
          "Cu",
          "Cv",
          "Cw",
          "Cx",
          "Cy",
          "De",
          "Dj",
          "Dk",
          "Dm",
          "Do",
          "Dz",
          "Ec",
          "Ee",
          "Eg",
          "Eh",
          "Er",
          "Es",
          "Et",
          "Fi",
          "Fj",
          "Fk",
          "Fm",
          "Fo",
          "Fr",
          "Ga",
          "Gd",
          "Ge",
          "Gf",
          "Gg",
          "Gh",
          "Gi",
          "Gl",
          "Gm",
          "Gn",
          "Gp",
          "Gq",
          "Gr",
          "Gs",
          "Gt",
          "Gu",
          "Gw",
          "Gy",
          "Hk",
          "Hm",
          "Hn",
          "Hr",
          "Ht",
          "Hu",
          "Id",
          "Ie",
          "Il",
          "Im",
          "In",
          "Io",
          "Iq",
          "Ir",
          "Is",
          "It",
          "Je",
          "Jm",
          "Jo",
          "Jp",
          "Ke",
          "Kg",
          "Kh",
          "Ki",
          "Km",
          "Kn",
          "Kp",
          "Kr",
          "Kw",
          "Ky",
          "Kz",
          "La",
          "Lb",
          "Lc",
          "Li",
          "Lk",
          "Lr",
          "Ls",
          "Lt",
          "Lu",
          "Lv",
          "Ly",
          "Ma",
          "Mc",
          "Md",
          "Me",
          "Mf",
          "Mg",
          "Mh",
          "Mk",
          "Ml",
          "Mm",
          "Mn",
          "Mo",
          "Mp",
          "Mq",
          "Mr",
          "Ms",
          "Mt",
          "Mu",
          "Mv",
          "Mw",
          "Mx",
          "My",
          "Mz",
          "Na",
          "Nc",
          "Ne",
          "Nf",
          "Ng",
          "Ni",
          "Nl",
          "No",
          "Np",
          "Nr",
          "Nu",
          "Nz",
          "Om",
          "Pa",
          "Pe",
          "Pf",
          "Pg",
          "Ph",
          "Pk",
          "Pl",
          "Pm",
          "Pn",
          "Pr",
          "Ps",
          "Pt",
          "Pw",
          "Py",
          "Qa",
          "Re",
          "Ro",
          "Rs",
          "Ru",
          "Rw",
          "Sa",
          "Sb",
          "Sc",
          "Sd",
          "Se",
          "Sg",
          "Sh",
          "Si",
          "Sj",
          "Sk",
          "Sl",
          "Sm",
          "Sn",
          "So",
          "Sr",
          "Ss",
          "St",
          "Sv",
          "Sx",
          "Sy",
          "Sz",
          "Tc",
          "Td",
          "Tf",
          "Tg",
          "Th",
          "Tj",
          "Tk",
          "Tl",
          "Tm",
          "Tn",
          "To",
          "Tr",
          "Tt",
          "Tv",
          "Tw",
          "Tz",
          "Ua",
          "Ug",
          "Um",
          "Uy",
          "Uz",
          "Va",
          "Vc",
          "Ve",
          "Vg",
          "Vi",
          "Vn",
          "Vu",
          "Wf",
          "Ws",
          "Ye",
          "Yt",
          "Za",
          "Zm",
          "Zw"
        ]
      },
      "ProblemDetails": {
        "type": "object",
        "description": "RFC7807 compatible problem details/ error response class. this can be used by configuring startup like so:\napp.UseFastEndpoints(c => c.Errors.UseProblemDetails())",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "default": "https://www.rfc-editor.org/rfc/rfc7231#section-6.5.1"
          },
          "title": {
            "type": "string",
            "default": "One or more validation errors occurred."
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "default": 400
          },
          "instance": {
            "type": "string",
            "default": "/api/route"
          },
          "traceId": {
            "type": "string",
            "default": "0HMPNHL0JHL76:00000001"
          },
          "detail": {
            "type": "string",
            "description": "the details of the error",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails_Error"
            }
          }
        }
      },
      "ProblemDetails_Error": {
        "type": "object",
        "description": "the error details object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "description": "the name of the error or property of the dto that caused the error",
            "default": "Error or field name"
          },
          "reason": {
            "type": "string",
            "description": "the reason for the error",
            "default": "Error reason"
          },
          "code": {
            "type": "string",
            "description": "the code of the error",
            "nullable": true
          },
          "severity": {
            "type": "string",
            "description": "the severity of the error",
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "OAuth2": {
        "type": "oauth2",
        "description": "IMPORTANT NOTE: If you do not specify any scope in the authentication request\r\n                        then generated access token gets all scopes the specified client_id is authorized for.",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "http://localhost:9011/oauth2/authorize",
            "tokenUrl": "http://localhost:9011/oauth2/token",
            "scopes": {
              "email": "Email.",
              "openid": "OpenID.",
              "profile": "Profile."
            }
          }
        }
      }
    }
  }
}