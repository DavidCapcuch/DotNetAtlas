{
  "x-generator": "NSwag v14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "DotNetAtlas API",
    "description": "DotNet Atlas - Made with ❤️, Powered by ☕",
    "contact": {
      "name": "David Capcuch",
      "url": "",
      "email": "d.capcuch@gmail.com"
    },
    "version": "v1"
  },
  "servers": [
    {
      "url": "http://localhost:5159"
    }
  ],
  "paths": {
    "/api/v1/admin/clear-all-cache": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Clears all cache entries. (Auth policies:  'DevOnlyPolicy' roles: [Developer])",
        "description": "Purges the entire cache store. Use with caution in production environments.<br/><br/>AllowFailsafe - True: logical expire only, keep for failsafe. False: remove entries for good.",
        "operationId": "DotNetAtlasApiEndpointsAdminClearAllCacheEndpoint",
        "requestBody": {
          "x-name": "ClearAllCacheRequest",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClearAllCacheRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/api/v1/admin/clear-cache-by-tag/{tag}": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Removes cache entries by tag. (Auth policies:  'DevOnlyPolicy' roles: [Developer])",
        "operationId": "DotNetAtlasApiEndpointsAdminRemoveCacheByTagEndpoint",
        "parameters": [
          {
            "name": "tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Cz"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/api/v1/dev/seed-database": {
      "post": {
        "tags": [
          "Dev"
        ],
        "summary": "Seeds the database with a specified number of active callout items for testing purposes. (Auth policies:  'DevOnlyPolicy' roles: [Developer])",
        "description": "Generates a specified number of weather forecast feedbacks.",
        "operationId": "DotNetAtlasApiEndpointsDevSeedDatabaseEndpoint",
        "parameters": [
          {
            "name": "numberOfRecords",
            "in": "query",
            "required": true,
            "description": "Number of records to generate.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/api/v1/weather/feedback/{id}": {
      "put": {
        "tags": [
          "Weather"
        ],
        "summary": "Change weather feedback. Only user who created the feedback can change it. (Auth non-anonymous)",
        "operationId": "DotNetAtlasApiEndpointsWeatherChangeFeedbackEndpoint",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "example": "0198b2a9-cb8c-744b-8cdd-0b64727cf2fc"
          }
        ],
        "requestBody": {
          "x-name": "ChangeFeedbackCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeFeedbackCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "403": {
            "description": "Forbidden"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      },
      "get": {
        "tags": [
          "Weather"
        ],
        "summary": "Returns weather feedback by ID. (Auth non-anonymous)",
        "operationId": "DotNetAtlasApiEndpointsWeatherGetFeedbackByIdEndpoint",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of requested feedback.",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "example": "0198b2a9-cb8c-744b-8cdd-0b64727cf2fc"
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFeedbackByIdResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/api/v1/weather/forecast": {
      "get": {
        "tags": [
          "Weather"
        ],
        "summary": "Returns weather forecast.",
        "description": "Provides x days weather forecast for the specified city.",
        "operationId": "DotNetAtlasApiEndpointsWeatherGetForecastEndpoint",
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "required": true,
            "description": "Number of days of forecast (1-14).",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 5
          },
          {
            "name": "city",
            "in": "query",
            "required": true,
            "description": "City name to fetch forecast for.",
            "schema": {
              "type": "string"
            },
            "example": "Prague"
          },
          {
            "name": "countryCode",
            "in": "query",
            "required": true,
            "description": "ISO 3166-1 alpha-2 country code to disambiguate city (e.g., CZ).",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CountryCode"
                }
              ]
            },
            "example": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetForecastResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/weather/feedback": {
      "post": {
        "tags": [
          "Weather"
        ],
        "summary": "Send weather forecast feedback. (Auth non-anonymous)",
        "operationId": "DotNetAtlasApiEndpointsWeatherSendFeedbackEndpoint",
        "requestBody": {
          "x-name": "SendFeedbackCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendFeedbackCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "409": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "OAuth2": []
          }
        ]
      }
    },
    "/signalr-dev/spec.json": {
      "get": {
        "operationId": "GetSignalrDevSpec.json",
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ClearAllCacheRequest": {
        "type": "object",
        "example": {
          "allowFailsafe": false
        },
        "additionalProperties": false,
        "properties": {
          "allowFailsafe": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "ChangeFeedbackCommand": {
        "type": "object",
        "example": {
          "feedback": "Nevermind. Promised sun, delivered ocean. Boss music started and my picnic learned to swim",
          "rating": 1
        },
        "additionalProperties": false,
        "properties": {
          "feedback": {
            "type": "string",
            "description": "Feedback message about the weather forecast.",
            "example": "Nevermind. Promised sun, delivered ocean. Boss music started and my picnic learned to swim"
          },
          "rating": {
            "type": "integer",
            "format": "byte",
            "example": 1
          }
        }
      },
      "GetFeedbackByIdResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the feedback.",
            "format": "guid"
          },
          "feedback": {
            "type": "string",
            "description": "The weather feedback content."
          },
          "rating": {
            "type": "integer",
            "format": "int32"
          },
          "createdByUser": {
            "type": "string",
            "description": "Who created the feedback.",
            "format": "guid"
          }
        }
      },
      "GetForecastResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "forecasts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ForecastDto"
            }
          }
        }
      },
      "ForecastDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "maxTemperatureC": {
            "type": "number",
            "format": "double"
          },
          "minTemperatureC": {
            "type": "number",
            "format": "double"
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SendFeedbackCommand": {
        "type": "object",
        "example": {
          "feedback": "Your radar is my spirit animal. Dodged the storm like Neo",
          "rating": 5
        },
        "additionalProperties": false,
        "properties": {
          "feedback": {
            "type": "string",
            "description": "Feedback message about the weather forecast.",
            "example": "Your radar is my spirit animal. Dodged the storm like Neo"
          },
          "rating": {
            "type": "integer",
            "format": "byte",
            "example": 5
          }
        }
      },
      "CountryCode": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "CZ",
          "US",
          "GB",
          "AD",
          "AE",
          "AF",
          "AG",
          "AI",
          "AL",
          "AM",
          "AO",
          "AQ",
          "AR",
          "AS",
          "AT",
          "AU",
          "AW",
          "AX",
          "AZ",
          "BA",
          "BB",
          "BD",
          "BE",
          "BF",
          "BG",
          "BH",
          "BI",
          "BJ",
          "BL",
          "BM",
          "BN",
          "BO",
          "BQ",
          "BR",
          "BS",
          "BT",
          "BV",
          "BW",
          "BY",
          "BZ",
          "CA",
          "CC",
          "CD",
          "CF",
          "CG",
          "CH",
          "CI",
          "CK",
          "CL",
          "CM",
          "CN",
          "CO",
          "CR",
          "CU",
          "CV",
          "CW",
          "CX",
          "CY",
          "DE",
          "DJ",
          "DK",
          "DM",
          "DO",
          "DZ",
          "EC",
          "EE",
          "EG",
          "EH",
          "ER",
          "ES",
          "ET",
          "FI",
          "FJ",
          "FK",
          "FM",
          "FO",
          "FR",
          "GA",
          "GD",
          "GE",
          "GF",
          "GG",
          "GH",
          "GI",
          "GL",
          "GM",
          "GN",
          "GP",
          "GQ",
          "GR",
          "GS",
          "GT",
          "GU",
          "GW",
          "GY",
          "HK",
          "HM",
          "HN",
          "HR",
          "HT",
          "HU",
          "ID",
          "IE",
          "IL",
          "IM",
          "IN",
          "IO",
          "IQ",
          "IR",
          "IS",
          "IT",
          "JE",
          "JM",
          "JO",
          "JP",
          "KE",
          "KG",
          "KH",
          "KI",
          "KM",
          "KN",
          "KP",
          "KR",
          "KW",
          "KY",
          "KZ",
          "LA",
          "LB",
          "LC",
          "LI",
          "LK",
          "LR",
          "LS",
          "LT",
          "LU",
          "LV",
          "LY",
          "MA",
          "MC",
          "MD",
          "ME",
          "MF",
          "MG",
          "MH",
          "MK",
          "ML",
          "MM",
          "MN",
          "MO",
          "MP",
          "MQ",
          "MR",
          "MS",
          "MT",
          "MU",
          "MV",
          "MW",
          "MX",
          "MY",
          "MZ",
          "NA",
          "NC",
          "NE",
          "NF",
          "NG",
          "NI",
          "NL",
          "NO",
          "NP",
          "NR",
          "NU",
          "NZ",
          "OM",
          "PA",
          "PE",
          "PF",
          "PG",
          "PH",
          "PK",
          "PL",
          "PM",
          "PN",
          "PR",
          "PS",
          "PT",
          "PW",
          "PY",
          "QA",
          "RE",
          "RO",
          "RS",
          "RU",
          "RW",
          "SA",
          "SB",
          "SC",
          "SD",
          "SE",
          "SG",
          "SH",
          "SI",
          "SJ",
          "SK",
          "SL",
          "SM",
          "SN",
          "SO",
          "SR",
          "SS",
          "ST",
          "SV",
          "SX",
          "SY",
          "SZ",
          "TC",
          "TD",
          "TF",
          "TG",
          "TH",
          "TJ",
          "TK",
          "TL",
          "TM",
          "TN",
          "TO",
          "TR",
          "TT",
          "TV",
          "TW",
          "TZ",
          "UA",
          "UG",
          "UM",
          "UY",
          "UZ",
          "VA",
          "VC",
          "VE",
          "VG",
          "VI",
          "VN",
          "VU",
          "WF",
          "WS",
          "YE",
          "YT",
          "ZA",
          "ZM",
          "ZW"
        ],
        "enum": [
          "CZ",
          "US",
          "GB",
          "AD",
          "AE",
          "AF",
          "AG",
          "AI",
          "AL",
          "AM",
          "AO",
          "AQ",
          "AR",
          "AS",
          "AT",
          "AU",
          "AW",
          "AX",
          "AZ",
          "BA",
          "BB",
          "BD",
          "BE",
          "BF",
          "BG",
          "BH",
          "BI",
          "BJ",
          "BL",
          "BM",
          "BN",
          "BO",
          "BQ",
          "BR",
          "BS",
          "BT",
          "BV",
          "BW",
          "BY",
          "BZ",
          "CA",
          "CC",
          "CD",
          "CF",
          "CG",
          "CH",
          "CI",
          "CK",
          "CL",
          "CM",
          "CN",
          "CO",
          "CR",
          "CU",
          "CV",
          "CW",
          "CX",
          "CY",
          "DE",
          "DJ",
          "DK",
          "DM",
          "DO",
          "DZ",
          "EC",
          "EE",
          "EG",
          "EH",
          "ER",
          "ES",
          "ET",
          "FI",
          "FJ",
          "FK",
          "FM",
          "FO",
          "FR",
          "GA",
          "GD",
          "GE",
          "GF",
          "GG",
          "GH",
          "GI",
          "GL",
          "GM",
          "GN",
          "GP",
          "GQ",
          "GR",
          "GS",
          "GT",
          "GU",
          "GW",
          "GY",
          "HK",
          "HM",
          "HN",
          "HR",
          "HT",
          "HU",
          "ID",
          "IE",
          "IL",
          "IM",
          "IN",
          "IO",
          "IQ",
          "IR",
          "IS",
          "IT",
          "JE",
          "JM",
          "JO",
          "JP",
          "KE",
          "KG",
          "KH",
          "KI",
          "KM",
          "KN",
          "KP",
          "KR",
          "KW",
          "KY",
          "KZ",
          "LA",
          "LB",
          "LC",
          "LI",
          "LK",
          "LR",
          "LS",
          "LT",
          "LU",
          "LV",
          "LY",
          "MA",
          "MC",
          "MD",
          "ME",
          "MF",
          "MG",
          "MH",
          "MK",
          "ML",
          "MM",
          "MN",
          "MO",
          "MP",
          "MQ",
          "MR",
          "MS",
          "MT",
          "MU",
          "MV",
          "MW",
          "MX",
          "MY",
          "MZ",
          "NA",
          "NC",
          "NE",
          "NF",
          "NG",
          "NI",
          "NL",
          "NO",
          "NP",
          "NR",
          "NU",
          "NZ",
          "OM",
          "PA",
          "PE",
          "PF",
          "PG",
          "PH",
          "PK",
          "PL",
          "PM",
          "PN",
          "PR",
          "PS",
          "PT",
          "PW",
          "PY",
          "QA",
          "RE",
          "RO",
          "RS",
          "RU",
          "RW",
          "SA",
          "SB",
          "SC",
          "SD",
          "SE",
          "SG",
          "SH",
          "SI",
          "SJ",
          "SK",
          "SL",
          "SM",
          "SN",
          "SO",
          "SR",
          "SS",
          "ST",
          "SV",
          "SX",
          "SY",
          "SZ",
          "TC",
          "TD",
          "TF",
          "TG",
          "TH",
          "TJ",
          "TK",
          "TL",
          "TM",
          "TN",
          "TO",
          "TR",
          "TT",
          "TV",
          "TW",
          "TZ",
          "UA",
          "UG",
          "UM",
          "UY",
          "UZ",
          "VA",
          "VC",
          "VE",
          "VG",
          "VI",
          "VN",
          "VU",
          "WF",
          "WS",
          "YE",
          "YT",
          "ZA",
          "ZM",
          "ZW"
        ]
      },
      "AlertSubscriptionDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "city": {
            "type": "string"
          },
          "countryCode": {
            "$ref": "#/components/schemas/CountryCode"
          }
        }
      },
      "WeatherAlert": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "city": {
            "type": "string"
          },
          "countryCode": {
            "$ref": "#/components/schemas/CountryCode"
          },
          "alertMessage": {
            "type": "string"
          }
        }
      },
      "WeatherAlertMessage": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "OAuth2": {
        "type": "oauth2",
        "description": "IMPORTANT NOTE: If you do not specify any scope in the authentication request\n                        then generated access token gets all scopes the specified client_id is authorized for.",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "http://localhost:9011/oauth2/authorize",
            "tokenUrl": "http://localhost:9011/oauth2/token",
            "scopes": {
              "email": "Email.",
              "offline_access": "Generate refresh token.",
              "openid": "OpenID.",
              "profile": "Profile."
            }
          }
        }
      }
    }
  }
}