{
  "x-generator": "NSwag v14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "GetDocument.Insider",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:5159"
    }
  ],
  "paths": {
    "/api/weather/forecast": {
      "get": {
        "tags": [
          "Weather"
        ],
        "summary": "Returns weather forecast.",
        "description": "Provides x days weather forecast with random temperatures and summaries.",
        "operationId": "DotNetAtlasApiEndpointsWeatherForecastWeatherForecastEndpoint",
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "required": true,
            "description": "Number of days of forecast. (1-14)",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 5
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecastResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "WeatherForecastResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32"
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ProblemDetails": {
        "type": "object",
        "description": "RFC7807 compatible problem details/ error response class. this can be used by configuring startup like so:\napp.UseFastEndpoints(c => c.Errors.UseProblemDetails())",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "default": "https://www.rfc-editor.org/rfc/rfc7231#section-6.5.1"
          },
          "title": {
            "type": "string",
            "default": "One or more validation errors occurred."
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "default": 400
          },
          "instance": {
            "type": "string",
            "default": "/api/route"
          },
          "traceId": {
            "type": "string",
            "default": "0HMPNHL0JHL76:00000001"
          },
          "detail": {
            "type": "string",
            "description": "the details of the error",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemDetails_Error"
            }
          }
        }
      },
      "ProblemDetails_Error": {
        "type": "object",
        "description": "the error details object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "description": "the name of the error or property of the dto that caused the error",
            "default": "Error or field name"
          },
          "reason": {
            "type": "string",
            "description": "the reason for the error",
            "default": "Error reason"
          },
          "code": {
            "type": "string",
            "description": "the code of the error",
            "nullable": true
          },
          "severity": {
            "type": "string",
            "description": "the severity of the error",
            "nullable": true
          }
        }
      }
    }
  }
}