// <auto-generated />

#nullable disable

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

namespace DotNetAtlas.Infrastructure.Persistence.Database.Migrations;

[DbContext(typeof(WeatherForecastContext))]
partial class WeatherForecastContextModelSnapshot : ModelSnapshot
{
    protected override void BuildModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder
            .HasDefaultSchema("weather")
            .HasAnnotation("ProductVersion", "9.0.7")
            .HasAnnotation("Relational:MaxIdentifierLength", 128);

        SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

        modelBuilder.Entity("DotNetAtlas.Domain.Entities.Weather.WeatherFeedback", b =>
        {
            b.Property<Guid>("Id")
                .HasColumnType("uniqueidentifier")
                .HasComment("PK");

            b.Property<Guid>("CreatedByUser")
                .HasColumnType("uniqueidentifier")
                .HasComment("User who created the feedback.");

            b.Property<DateTime>("CreatedUtc")
                .HasColumnType("datetime2")
                .HasComment("Creation timestamp (UTC).");

            b.Property<DateTime>("LastModifiedUtc")
                .HasColumnType("datetime2")
                .HasComment("Last modification timestamp (UTC).");

            b.Property<byte[]>("Timestamp")
                .IsConcurrencyToken()
                .ValueGeneratedOnAddOrUpdate()
                .HasColumnType("rowversion")
                .HasComment("Optimistic concurrency token.");

            b.ComplexProperty<Dictionary<string, object>>("Feedback", "DotNetAtlas.Domain.Entities.Weather.WeatherFeedback.Feedback#FeedbackText", b1 =>
            {
                b1.IsRequired();

                b1.Property<string>("Value")
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasColumnType("nvarchar(500)")
                    .HasColumnName("Feedback")
                    .HasComment("Weather feedback from the user.");
            });

            b.ComplexProperty<Dictionary<string, object>>("Rating", "DotNetAtlas.Domain.Entities.Weather.WeatherFeedback.Rating#FeedbackRating", b1 =>
            {
                b1.IsRequired();

                b1.Property<int>("Value")
                    .HasColumnType("int")
                    .HasColumnName("Rating")
                    .HasComment("Rating given by the user.");
            });

            b.HasKey("Id");

            b.HasIndex("CreatedByUser")
                .IsUnique()
                .HasDatabaseName("UX_WeatherFeedback_CreatedByUser");

            b.ToTable("WeatherFeedbacks", "weather", t =>
            {
                t.HasComment("Contains user feedbacks about the weather.");
            });
        });
#pragma warning restore 612, 618
    }
}
